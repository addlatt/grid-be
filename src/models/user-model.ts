import { Sequelize, DataTypes, Model, type Optional } from 'sequelize';

// Define the interface for the attributes of the User model
export interface UserAttributes {
    user_id: number;
    username: string;
    email: string;
    password_hash: string;
    created_at?: Date;
    updated_at?: Date;
}

// Define an interface for creating a new User
// `user_id` is optional when creating a user, as it's auto-generated by the database
export interface UserCreationAttributes extends Optional<UserAttributes, 'user_id' | 'created_at' | 'updated_at'> {}

// Extend Sequelize's Model class
export class User extends Model<UserAttributes, UserCreationAttributes> implements UserAttributes {
    public user_id!: number;
    public username!: string;
    public email!: string;
    public password_hash!: string;
    public created_at?: Date;
    public updated_at?: Date;

    // Timestamps will automatically be set by Sequelize if configured
}

// Function to initialize the User model
export const initUserModel = (sequelize: Sequelize): typeof User => {
    User.init(
        {
            user_id: {
                type: DataTypes.INTEGER.UNSIGNED,
                autoIncrement: true,
                primaryKey: true,
            },
            username: {
                type: DataTypes.STRING(50),
                allowNull: false,
                unique: true,
            },
            email: {
                type: DataTypes.STRING(100),
                allowNull: false,
                unique: true,
            },
            password_hash: {
                type: DataTypes.TEXT,
                allowNull: false,
            },
            created_at: {
                type: DataTypes.DATE,
                allowNull: false,
                defaultValue: DataTypes.NOW,
            },
            updated_at: {
                type: DataTypes.DATE,
                allowNull: false,
                defaultValue: DataTypes.NOW,
            },
        },
        {
            sequelize,
            tableName: 'users',
            timestamps: true, // Enables `createdAt` and `updatedAt`
            createdAt: 'created_at', // Maps to `created_at` column
            updatedAt: 'updated_at', // Maps to `updated_at` column
        }
    );

    return User;
};
